### Ongoing 

- Test Local presence + local session communication
- Distant session 
- Presence server 
- Create Profile window  
- Add timestamp to message 

- file message UI 
- Settings Window 

# Implementation 

- UI
	- Polish 
		- Rescale components when downsizing window 
		- Use Icon for buttons (use labels & source folder)
	- Create Profile window  
		- limit size 
		- limit character type 
		- Check validity when button push 
	- File message 
		- Add button to embed file in message 
		- Make JFileMessagePanel 
		- Add implementation in JChatPanel 
	- Message 
		- add timestamp 
	- Settings window (in edit menu)
		- profil sub window 
			- change username button 
		- other sub window 
			- download path 
	

- LocalCommunication 
	- Try to make the system more scalable 
	- Use interface & think of SOLID 
	- make factory for message 
	- observer between localsystem and listener 
	- observer between localsystem and sessions ? 

- DB
	- ask mysql credentials
	- see mysql 

- Presence server 
	- see tomcat 
	- see servlet & REST 

- Session 
	- TCP 
		- DistantSession has serverSocket || Socket 
	- DistantCommListener => Use ThreadPool to handle all connection (see Server5.java)
	- Make distant Communication 
		- Use tcp socket 
		- Make distantCommunicationListener 
			- StartDistantsession called by controller 
			- System create distant session and call notifystartSession on created session 
				- Session create notifystartSessionTask that send SS to distantcommunicationListener port of receiveripaddress with sessionData(serverSocket port) in messageContent, via TCP 
			- DistantCommListener receive SS, create new DistantSession and call notify startSessionResponse
				- created distant session try to connect to first distantSession using Socket class 
			- firstDistantSession 
	- Make factory for session ( calling specific method depending on type of session ... )

- Clean code 
	- close resources(socket,connection,ect) 
	- Override ToString
	- use static factory ||factory pattern if needed 
	- prohibit inheritance when not used 
		- Make constructor private 
		- Use final keyword 
	- implement autocloseable 
	- add @Override
	- Add Comments 
	- Make field final by default 
	- Exception 
		- clean 
		- use try with when using resources 
	- add synchronization statement 

-Pattern 
	- Static factory method 
	- Abstract factory 
	- Observer 	


# Perf 
	- Multithread dao 
	- Constraints 
		- Deployment <= 2h
		- username change visible to everyone <= 20s 
		- time between sending & receiving messages <= 1s
		- Central system able to withstand 1000 sessions 
		- LocalSystem able to withstand 50 sessions 
		- Inform of username unavailability <= 3s
		- Show Online user on connection <= 5s 
		- CentralSys withstand 100 000 users 
		- CentralSys memory footprint <= 100Mo 
		- CPU use <= 1% in 5s range measure 
# Deploy


# Polish 
	- Produce javadoc with comments (see resources)
	- Review effective Java items 
		- item 10 to 14 
	- Add documentation 
		- readMe
	- Redo UML 