### Ongoing 

- Test Home 
	- Deploy Client 
	- deploy .war on localhost (see tuto) 
- Test INSA
	- .jar client 
	- Distant Session 
	- changeUsername
	- File download 
	- Presence Server 
		- Local 
		- Deploy on INSA server 
	
- Presence server 


# Deploy

- CLient 
	- test .jar 
- PresenceService 
	- test at home and at INSA 

# Implementation 

- UI
	- Polish 
		- Use Icon for buttons (use labels & source folder)
	- Message 
		- polish displayed timestamp 
	

- LocalCommunication 
	- Try to make the system more scalable 
	- Use interface & think of SOLID 
	- make factory for message 
	- observer between localsystem and listener 
	- observer between localsystem and sessions ? 

- Presence server 
	- Polish 
		- use SLF4J for log 
		- Use JPA & Hibernate 
		- use propertie file to save db url & other param 
	- Optional 
		- Make UserBean class & UserBeanAdaoter to convert from User to UserBean ? 
		- Use Javabean for User 
		- Use sessionListener ? 
		- Tracking 
			- Use to see if client already marked online 
			- Use cookies ? or sessions ? 
		- session-config file 
			- setup sesison timeout 
		

- Session 
	- Make factory for session ( calling specific method depending on type of session ... )

- Clean code 
	- close resources(socket,connection,ect) 
	- Override ToString
	- use static factory ||factory pattern if needed 
	- prohibit inheritance when not used 
		- Make constructor private 
		- Use final keyword 
	- implement autocloseable 
	- add @Override
	- Add Comments 
	- Make field final by default 
	- Exception 
		- clean 
		- use try with when using resources 
	- add synchronization statement 
	- Write global variables in config files (conf.properties) & use Properties class 
		- db url 
		- port 
		- webservice url 
	- Check method parameter 
		- not null, value ect 

-Pattern 
	- Static factory method 
	- Abstract factory 
	- Observer 	

- Android 
	- Use android Studio 
	- see what can be kept 

{"id"\:{"id"\:"CgAnAAAa"},"ipAddress"\:"192.168.56.1","username"\:"name"}

# Perf 
	- Multithread dao 
	- Constraints 
		- Deployment <= 2h
		- username change visible to everyone <= 20s 
		- time between sending & receiving messages <= 1s
		- Central system able to withstand 1000 sessions 
		- LocalSystem able to withstand 50 sessions 
		- Inform of username unavailability <= 3s
		- Show Online user on connection <= 5s 
		- CentralSys withstand 100 000 users 
		- CentralSys memory footprint <= 100Mo 
		- CPU use <= 1% in 5s range measure 

# Documentation 
- Explain choices 
- How to 
- Test made 


# Polish 
	- Produce javadoc with comments 
		- see resources
		- see effective Java 
	- Review effective Java items 
		- item 10 to 14 
	- Add documentation 
		- readMe
	- Redo UML 
		- search eplise plug in to generate diagrams 